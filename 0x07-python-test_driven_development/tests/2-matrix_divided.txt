============================
``2-matrix_divided`` module
============================

Using ``matrix_divided``
-------------------

``matrix_divided()`` will take two arguments. First one
must be list of list of integers and the other is the number
to divide it with

::

Importing function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now Use it

testing matrix cases
--------------------

    >>> matrix_divided([[2, 4, 6]], 2)
    [[1.0, 2.0, 3.0]]

    >>> matrix_divided([[6]], 2)
    [[3.0]]

    >>> matrix_divided([[0]], 2)
    [[0.0]]

    >>> matrix_divided([[2, 4, 6], [8, 10, 12], [14, 16, 18]], 2)
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0], [7.0, 8.0, 9.0]]

    >>> matrix_divided([[2, -4, 6], [-8, 10, -12], [14, -16, 18]], 2)
    [[1.0, -2.0, 3.0], [-4.0, 5.0, -6.0], [7.0, -8.0, 9.0]]

    >>> matrix_divided([[float('inf')]], 2)
    [[inf]]

    >>> matrix_divided([[float('nan')]], 2)
    [[nan]]

    >>> matrix_divided([[2, -4, 6], (-8, 10, -12), [14, -16, 18]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[2, -4, 6], [6], [14, -16, 18]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[2, -4, 6], [[6], 7, 8], [14, -16, 18]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[None]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

testing div cases
--------------------

    >>> matrix_divided([[2, 4, 6]], 2)
    [[1.0, 2.0, 3.0]]

    >>> matrix_divided([[2, 4, 6]], 8)
    [[0.25, 0.5, 0.75]]

    >>> matrix_divided([[2, 4, 6]], -2)
    [[-1.0, -2.0, -3.0]]

    >>> matrix_divided([[2, 4, 6]], 2.3)
    [[0.87, 1.74, 2.61]]

    >>> matrix_divided([[2, 4, 6]], float('inf'))
    [[0.0, 0.0, 0.0]]

    >>> matrix_divided([[2, 4, 6]], float('nan'))
    [[nan, nan, nan]]

    >>> matrix_divided([[2, 4, 6]], None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix_divided([[2, 4, 6]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[2, 4, 6]], '2')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
